import Ember from 'ember';

export default Ember.Route.extend({
  model() {
    return Ember.Object.create({
      value:'accepted',
      item1:'item1',
      item2:'item2',
      item3:'item3'
    });
  },
  templateCompiled: '(function() {'
  +'var child0 = (function() {'
    +'return {'
      +'meta: {'
        +'"revision": "Ember@1.13.10",'
        +'"loc": {'
          +'"source": null,'
          +'"start": {'
            +'"line": 12,'
            +'"column": 0'
          +'},'
          +'"end": {'
            +'"line": 18,'
            +'"column": 0'
          +'}'
        +'}'
      +'},'
      +'arity: 1,'
      +'cachedFragment: null,'
      +'hasRendered: false,'
      +'buildFragment: function buildFragment(dom) {'
        +'var el0 = dom.createDocumentFragment();'
        +'var el1 = dom.createTextNode("  ");'
        +'dom.appendChild(el0, el1);'
        +'var el1 = dom.createElement("ul");'
        +'var el2 = dom.createTextNode("\n    ");'
        +'dom.appendChild(el1, el2);'
        +'var el2 = dom.createComment("");'
        +'dom.appendChild(el1, el2);'
        +'var el2 = dom.createTextNode("\n    ");'
        +'dom.appendChild(el1, el2);'
        +'var el2 = dom.createComment("");'
        +'dom.appendChild(el1, el2);'
        +'var el2 = dom.createTextNode("\n    ");'
        +'dom.appendChild(el1, el2);'
        +'var el2 = dom.createComment("");'
        +'dom.appendChild(el1, el2);'
        +'var el2 = dom.createTextNode("\n  ");'
        +'dom.appendChild(el1, el2);'
        +'dom.appendChild(el0, el1);'
        +'var el1 = dom.createTextNode("\n");'
        +'dom.appendChild(el0, el1);'
        +'return el0;'
      +'},'
      +'buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {'
        +'var element0 = dom.childAt(fragment, [1]);'
        +'var morphs = new Array(3);'
        +'morphs[0] = dom.createMorphAt(element0,1,1);'
        +'morphs[1] = dom.createMorphAt(element0,3,3);'
        +'morphs[2] = dom.createMorphAt(element0,5,5);'
        +'return morphs;'
      +'},'
      +'statements: ['
        +'["inline","list-item",[],["id","1","caption","This should show.","targetObject",["subexpr","@mut",[["get","list",["loc",[null,[14,64],[14,68]]]]],[],[]],"register","registerChild","onClick","closeAll"],["loc",[null,[14,4],[14,114]]]],'
        +'["inline","list-item",[],["id","2","targetObject",["subexpr","@mut",[["get","list",["loc",[null,[15,36],[15,40]]]]],[],[]],"caption",["subexpr","@mut",[["get","model.item2",["loc",[null,[15,49],[15,60]]]]],[],[]],"register","registerChild"],["loc",[null,[15,4],[15,87]]]],'
        +'["inline","list-item",[],["id","3","targetObject",["subexpr","@mut",[["get","list",["loc",[null,[16,36],[16,40]]]]],[],[]],"caption",["subexpr","@mut",[["get","model.item3",["loc",[null,[16,49],[16,60]]]]],[],[]],"register","registerChild"],["loc",[null,[16,4],[16,87]]]]'
      +'],'
      +'locals: ["list"],'
      +'templates: []'
    +'};'
  +'}());'
  +'return {'
    +'meta: {'
      +'"revision": "Ember@1.13.10",'
      +'"loc": {'
       +' "source": null,'
        +'"start": {'
          +'"line": 1,'
          +'"column": 0'
        +'},'
        +'"end": {'
          +'"line": 22,'
          +'"column": 0'
        +'}'
      +'}'
    +'},'
    +'arity: 0,'
    +'cachedFragment: null,'
    +'hasRendered: false,'
    +'buildFragment: function buildFragment(dom) {'
      +'var el0 = dom.createDocumentFragment();'
      +'var el1 = dom.createElement("h1");'
      +'var el2 = dom.createTextNode("ACCEPTED");'
      +'dom.appendChild(el1, el2);'
      +'dom.appendChild(el0, el1);'
      +'var el1 = dom.createTextNode("\n");'
      +'dom.appendChild(el0, el1);'
      +'var el1 = dom.createElement("div");'
      +'dom.setAttribute(el1,"class","row form-input-group");'
      +'var el2 = dom.createTextNode("\n  ");'
      +'dom.appendChild(el1, el2);'
      +'var el2 = dom.createElement("div");'
      +'dom.setAttribute(el2,"class","form-input-label");'
      +'var el3 = dom.createTextNode("\n    ");'
      +'dom.appendChild(el2, el3);'
      +'var el3 = dom.createElement("label");'
      +'dom.setAttribute(el3,"for","personalAnnualIncome");'
      +'var el4 = dom.createTextNode("Personal Annual Income");'
      +'dom.appendChild(el3, el4);'
      +'dom.appendChild(el2, el3);'
      +'var el3 = dom.createTextNode("\n  ");'
      +'dom.appendChild(el2, el3);'
      +'dom.appendChild(el1, el2);'
      +'var el2 = dom.createTextNode("\n  ");'
      +'dom.appendChild(el1, el2);'
      +'var el2 = dom.createElement("div");'
      +'dom.setAttribute(el2,"class","form-input input-group");'
      +'var el3 = dom.createTextNode("\n    ");'
      +'dom.appendChild(el2, el3);'
      +'var el3 = dom.createElement("span");'
      +'dom.setAttribute(el3,"class","input-group-addon");'
      +'var el4 = dom.createTextNode("$");'
      +'dom.appendChild(el3, el4);'
      +'dom.appendChild(el2, el3);'
      +'var el3 = dom.createTextNode("\n    ");'
      +'dom.appendChild(el2, el3);'
      +'var el3 = dom.createElement("input");'
      +'dom.setAttribute(el3,"name","personalAnnualIncome");'
      +'dom.setAttribute(el3,"type","text");'
      +'dom.setAttribute(el3,"class","form-control");'
      +'dom.setAttribute(el3,"aria-label","Amount (to the nearest dollar)");'
      +'dom.appendChild(el2, el3);'
      +'var el3 = dom.createTextNode("\n    ");'
      +'dom.appendChild(el2, el3);'
      +'var el3 = dom.createElement("span");'
      +'dom.setAttribute(el3,"class","input-group-addon");'
      +'var el4 = dom.createTextNode(".00");'
      +'dom.appendChild(el3, el4);'
      +'dom.appendChild(el2, el3);'
      +'var el3 = dom.createTextNode("\n  ");'
      +'dom.appendChild(el2, el3);'
      +'dom.appendChild(el1, el2);'
      +'var el2 = dom.createTextNode("\n");'
      +'dom.appendChild(el1, el2);'
      +'dom.appendChild(el0, el1);'
      +'var el1 = dom.createTextNode("\n");'
      +'dom.appendChild(el0, el1);'
      +'var el1 = dom.createComment("");'
      +'dom.appendChild(el0, el1);'
      +'var el1 = dom.createTextNode("\n");'
      +'dom.appendChild(el0, el1);'
      +'var el1 = dom.createElement("button");'
      +'var el2 = dom.createTextNode("Back");'
      +'dom.appendChild(el1, el2);'
      +'dom.appendChild(el0, el1);'
      +'var el1 = dom.createTextNode("\n\n");'
      +'dom.appendChild(el0, el1);'
      +'return el0;'
    +'},'
    +'buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {'
      +'var element1 = dom.childAt(fragment, [2, 3, 3]);'
      +'var element2 = dom.childAt(fragment, [6]);'
      +'var morphs = new Array(3);'
      +'morphs[0] = dom.createAttrMorph(element1, "value");'
      +'morphs[1] = dom.createMorphAt(fragment,4,4,contextualElement);'
      +'morphs[2] = dom.createElementMorph(element2);'
      +'return morphs;'
    +'},'
    +'statements: ['
      +'["attribute","value",["get","model.value",["loc",[null,[8,59],[8,70]]]]],'
      +'["block","items-list",[["get","action",["loc",[null,[12,14],[12,20]]]],"back"],[],0,null,["loc",[null,[12,0],[18,15]]]],'
      +'["element","action",["back"],[],["loc",[null,[20,8],[20,25]]]]'
    +'],'
    +'locals: [],'
    +'templates: [child0]'
  +'};'
+'}())',
  getPrecompiled(expression) {
    return eval(expression);
  },
  renderTemplate() {
    var self = this;
    // var cptmpl = this.get('templateCompiled');
    // // var precompiled = eval(cptmpl);
    // Ember.TEMPLATES["offers-campaign/offer/accepted"] = Ember.Handlebars.template(eval(cptmpl));
    self.render('offers-campaign/offer/accepted',{into:'offers-campaign'});
    // Ember.run.later(function() {

    // },500);
    
  },
  actions: {
    back() {
      this.transitionTo('offers-campaign.offer','migration');
    }
  }
});
